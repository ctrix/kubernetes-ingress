package main

import (
	"fmt"
	"log"
	"strings"

	"github.com/google/renameio"
)

var title = `
# ![HAProxy](../assets/images/haproxy-weblogo-210x49.png "HAProxy")

## HAProxy kubernetes ingress controller `

var headerREADME = `

### Documentation

- [Controller options](controller.md)
- [Custom resource definitions](custom-resources.md)
- [Annotations](annotations.md)

#### Experimental
- [Gateway API](gateway-api.md)

This is autogenerated from [doc.yaml](doc.yaml). Description can be found in [generator readme](gen/README.md)

`

func (c *Conf) generateReadme() {
	var buff strings.Builder
	buff.WriteString(title)
	buff.WriteString(c.ActiveVersion.String())
	buff.WriteString(headerREADME)

	err := renameio.WriteFile("../README.md", []byte(buff.String()), 0o644)
	if err != nil {
		log.Println(err)
	}
}

func selectExamples(ann *ConfItem, buff *strings.Builder) {
	numOverrides := 0
	numApplies := len(ann.AppliesTo)
	if ann.Title == "syslog-server" {
		numOverrides = 0
	}
	if ann.ExampleConfigmap != "" {
		numOverrides++
	}
	if ann.ExampleIngress != "" {
		numOverrides++
	}
	if ann.ExampleService != "" {
		numOverrides++
	}
	if numOverrides == 0 || numOverrides == 1 && numApplies == 1 {
		if ContainsB(ann.AppliesTo, "configmap") {
			buff.WriteString("Example:\n\n```yaml\n")
			if ann.ExampleConfigmap == "" {
				buff.WriteString(strings.Join(ann.Example, "\n"))
			} else {
				buff.WriteString(ann.ExampleConfigmap)
			}
			buff.WriteString("\n```\n\n")
		} else {
			buff.WriteString("Example:\n\n```yaml\n")
			for _, line := range ann.Example {
				if line[0] != '#' && ann.Title != "ingress.class" {
					buff.WriteString("haproxy.org/")
				}
				buff.WriteString(line)
				buff.WriteString("\n")
			}
			buff.WriteString("\n```\n\n")

		}
		return
	}

	if ann.ExampleConfigmap != "" {
		buff.WriteString("Example (configmap):\n\n```yaml\n")
		buff.WriteString(ann.ExampleConfigmap)
		buff.WriteString("\n```\n\n")
	}
	if ann.ExampleIngress != "" && ann.ExampleIngress == ann.ExampleService {
		buff.WriteString("Example (ingress, service):\n\n```yaml\n")
		buff.WriteString(ann.ExampleIngress)
		buff.WriteString("\n```\n\n")
	} else {
		if ann.ExampleIngress != "" {
			buff.WriteString("Example (ingress):\n\n```yaml\n")
			buff.WriteString(ann.ExampleIngress)
			buff.WriteString("\n```\n\n")
		}
		if ann.ExampleService != "" {
			buff.WriteString("Example (service):\n\n```yaml\n")
			buff.WriteString(ann.ExampleService)
			buff.WriteString("\n```\n\n")
		}
	}
}

func writeValue(value, defaultValue string) string {
	if value != defaultValue {
		return value
	}
	return fmt.Sprintf("%s `default`", value)
}
